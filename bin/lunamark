#!/usr/bin/env lua
-- lunamark program

local lunamark = require("lunamark")

local function one_of(ary)
  return function(s)
    for i=1,#ary do
      if ary[i]==s then return true end
    end
    return false, "must be one of: " .. table.concat(ary,", ")
  end
end

local options = {
  "lunamark [options] [file..] - convert text between formats",
   to      = { shortform = true,
               arg = "format",
               validate = one_of({"html","html5","docbook","latex","context"}),
               description = "Target format"},
   from    = { shortform = true,
               arg = "format",
               validate = one_of({"markdown"}),
               description = "Source format"},
   minimize = { arg = "boolean", optarg = true,
                description = "Compress whitespace in output" },
   blanklines = { arg = "boolean", optarg = true,
                  description = "Leave blank lines between block elements" },
   output  = { shortform = true,
               arg = "file",
               description = "Output file" },
   }

local defaults = {
   to  = "html",
   from = "markdown",
   minimize = false,
   blanklines = true
 }

local args = lunamark.cmdopts.getargs(options, defaults)

local reader = lunamark.reader[args.from]
if not reader then
  lunamark.util.err("Unknown reader: " .. tostring(args.from), 3)
end

local writer = lunamark.writer[args.to]
if not writer then
  lunamark.util.err("Unknown writer: " .. tostring(args.to), 5)
end

writer.options.minimize = args.minimize
writer.options.blanklines = args.blanklines

local convert = reader(writer,{})

io.output(args.output)
io.write(convert(lunamark.util.get_input(args,4)))
